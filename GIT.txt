Состояния в гите:
1 - Зафиксированное - значит, что файл уже сохранён в вашей локальной базе.

2 - изменённое - файлы, которые поменялись, но ещё не были зафиксированы. 

3 - Подготовленное - это изменённые файлы, отмеченные для включения в следующий коммит.
=======Команды=======
$ git clone git://github.com/schacon/grit.git
==Эта команда создаёт каталог с именем grit, инициализирует в нём каталог .git, скачивает все данные для этого репозитория и создаёт (checks out) рабочую копию последней версии. ==
====
$ git clone git://github.com/schacon/grit.git mygrit
==Эта команда делает всё то же самое, что и предыдущая, только результирующий каталог будет назван mygrit.==

=== git diff ===увидеть, что же вы изменили, но пока не проиндексировали( не применяли команду git add)

=== git diff --cached ===
посмотреть, что вы проиндексировали и что войдёт в следующий коммит, вы можете выполнить . (В Git'е версии 1.6.1 и выше, вы также можете использовать git diff --staged, которая легче запоминается.) Эта команда сравнивает ваши индексированные изменения с последним коммитом:
===$ git commit -a -m 'added stmh'===
Если у вас есть желание пропустить этап индексирования, Git предоставляет простой способ. Добавление параметра -a в команду git commit заставляет Git автоматически индексировать каждый уже отслеживаемый на момент коммита файл, позволяя вам обойтись без git add:
==git rm <file>===
Для того чтобы удалить файл из Git'а, вам необходимо удалить его из отслеживаемых файлов (точнее, удалить его из вашего индекса) а затем выполнить коммит. Это позволяет сделать команда git rm, которая также удаляет файл из вашего рабочего каталога, так что вы в следующий раз не увидите его как “неотслеживаемый”.
==git rm -f <file>===
Если вы изменили файл и уже проиндексировали его, вы должны использовать принудительное удаление с помощью параметра -f. Это сделано для повышения безопасности, чтобы предотвратить ошибочное удаление данных, которые ещё не были записаны в снимок состояния и которые нельзя восстановить из Git'а.
==$ git rm --cached smth.txt===
 удалить файл из индекса, оставив его при этом в рабочем каталоге. Другими словами, вы можете захотеть оставить файл на винчестере, и убрать его из-под бдительного ока Git'а. Это особенно полезно, если вы забыли добавить что-то в файл .gitignore и по ошибке проиндексировали, например, большой файл с логами, или кучу промежуточных файлов компиляции. Чтобы сделать это, используйте опцию --cached:
 ==git log==
   выводит список коммитов созданных в данном репозитории в обратном хронологическом порядке.
==git reset HEAD <файл>== для исключения его из индекса.
== git remote ==
Чтобы просмотреть, какие удалённые серверы у вас уже настроены, следует выполнить команду git remote . Она перечисляет список имён-сокращений для всех уже указанных удалённых дескрипторов. Если вы склонировали ваш репозиторий, у вас должен отобразиться, по крайней мере, origin — это имя по умолчанию, которое Git присваивает серверу, с которого вы склонировали
===$ git remote -v===
посмотреть, какоq URL у сокращённое имя указать команде опцию -v:




